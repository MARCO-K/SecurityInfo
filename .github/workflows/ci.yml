name: PowerShell Module CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]
                powershell-version: ['5.1', '7.x']
                exclude:
                    # PowerShell 5.1 is Windows only
                    - os: ubuntu-latest
                      powershell-version: '5.1'
                    - os: macos-latest
                      powershell-version: '5.1'

        steps:
            - uses: actions/checkout@v4

            - name: Install Pester (PowerShell 5.1)
              if: matrix.powershell-version == '5.1'
              shell: powershell
              run: |
                  if (-not (Get-Module -ListAvailable -Name Pester)) {
                    Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck
                  }

            - name: Install Pester (PowerShell 7.x)
              if: matrix.powershell-version == '7.x'
              shell: pwsh
              run: |
                  if (-not (Get-Module -ListAvailable -Name Pester)) {
                    Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck
                  }

            - name: Run Tests (PowerShell 5.1)
              if: matrix.powershell-version == '5.1'
              shell: powershell
              run: |
                  $testResults = Invoke-Pester -Path "tests/" -OutputFormat NUnitXml -OutputFile "TestResults.xml" -PassThru
                  if ($testResults.FailedCount -gt 0) {
                    throw "Tests failed: $($testResults.FailedCount) failed out of $($testResults.TotalCount)"
                  }

            - name: Run Tests (PowerShell 7.x)
              if: matrix.powershell-version == '7.x'
              shell: pwsh
              run: |
                  $testResults = Invoke-Pester -Path "tests/" -OutputFormat NUnitXml -OutputFile "TestResults.xml" -PassThru
                  if ($testResults.FailedCount -gt 0) {
                    throw "Tests failed: $($testResults.FailedCount) failed out of $($testResults.TotalCount)"
                  }

            - name: Upload Test Results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: test-results-${{ matrix.os }}-ps${{ matrix.powershell-version }}
                  path: TestResults.xml

    publish:
        needs: test
        runs-on: windows-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v4

            - name: Publish to PowerShell Gallery
              shell: pwsh
              env:
                  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
              run: |
                  if ($env:NUGET_API_KEY) {
                    Publish-Module -Path . -NuGetApiKey $env:NUGET_API_KEY -Verbose
                  } else {
                    Write-Warning "NUGET_API_KEY not found - skipping publish"
                  }
