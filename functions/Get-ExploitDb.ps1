<#
.SYNOPSIS
    Retrieves exploit information from Exploit-DB for specified CVE IDs.

.DESCRIPTION
    This function queries the Exploit-DB AJAX endpoint for exploits related to one or more CVE IDs.
    It returns details such as Exploit ID, link, title, platform, published date, and verification status.

.PARAMETER CveId
    One or more CVE IDs (e.g., "2023-12345") to search for related exploits.

.EXAMPLE
    Get-ExploitDb -CveId "2023-12345"

    Retrieves exploits for CVE-2023-12345.

.EXAMPLE
    "2023-12345","2022-5678" | Get-ExploitDb

    Retrieves exploits for multiple CVE IDs using pipeline input.

.OUTPUTS
    [pscustomobject] containing exploit details for each CVE ID.

.LINK
    https://www.exploit-db.com/
    https://www.exploit-db.com/search

.NOTES
    Author: Your Name
    Date: July 2025
    The function mimics browser AJAX requests to access Exploit-DB data.
    If no exploits are found, a warning is displayed for each CVE.
#>
function Get-ExploitDb
{
    [CmdletBinding()]
    param (
        [Parameter(Mandatory = $true, ValueFromPipeline = $true)]
        [string[]]$CveId
    )

    process
    {
        foreach ($singleCveId in $CveId)
        {
            # This URL queries the internal DataTables AJAX endpoint of Exploit-DB
            $ajaxUrl = "https://www.exploit-db.com/search?cve=$singleCveId&draw=2&columns%5B0%5D%5Bdata%5D=date_published&columns%5B0%5D%5Bname%5D=date_published&columns%5B0%5D%5Bsearchable%5D=true&columns%5B0%5D%5Borderable%5D=true&columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B1%5D%5Bdata%5D=download&columns%5B1%5D%5Bname%5D=download&columns%5B1%5D%5Bsearchable%5D=false&columns%5B1%5D%5Borderable%5D=false&columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B2%5D%5Bdata%5D=application_md5&columns%5B2%5D%5Bname%5D=application_md5&columns%5B2%5D%5Bsearchable%5D=true&columns%5B2%5D%5Borderable%5D=false&columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B2%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B3%5D%5Bdata%5D=verified&columns%5B3%5D%5Bname%5D=verified&columns%5B3%5D%5Borderable%5D=false&columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B4%5D%5Bdata%5D=description&columns%5B4%5D%5Bname%5D=description&columns%5B4%5D%5Bsearchable%5D=true&columns%5B4%5D%5Borderable%5D=false&columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B5%5D%5Bdata%5D=type_id&columns%5B5%5D%5Bname%5D=type_id&columns%5B5%5D%5Bsearchable%5D=true&columns%5B5%5D%5Borderable%5D=false&columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B5%D%5Bsearch%5D%5Bregex%5D=false&columns%5B6%5D%5Bdata%5D=platform_id&columns%5B6%5D%5Bname%5D=platform_id&columns%5B6%5D%5Bsearchable%5D=true&columns%5B6%5D%5Borderable%5D=false&columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B7%5D%5Bdata%5D=author_id&columns%5B7%5D%5Bname%5D=author_id&columns%5B7%5D%5Bsearchable%5D=false&columns%5B7%5D%5Borderable%5D=false&columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&order%5B0%5D%5Bcolumn%5D=0&order%5B0%5D%5Bdir%5D=desc&start=0&length=15&search%5Bvalue%5D=&search%5Bregex%5D=false"

            # Define headers to mimic a browser's AJAX request
            $headers = @{
                "User-Agent"       = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
                "Referer"          = "https://www.exploit-db.com/search?cve=$singleCveId"
                "X-Requested-With" = "XMLHttpRequest"
                "Accept"           = "application/json, text/javascript, */*; q=0.01"
            }

            try
            {
                $apiResponse = Invoke-RestMethod -Method Get -Uri $ajaxUrl -Headers $headers -ErrorAction Stop

                if ($apiResponse.data -and $apiResponse.data.Count -gt 0)
                {
                    foreach ($exploitData in $apiResponse.data)
                    {
                        if ($exploitData.id)
                        {
                            [PSCustomObject]@{
                                CVEID         = $singleCveId
                                ExploitID     = $exploitData.id
                                ExploitLink   = "https://www.exploit-db.com/exploits/$($exploitData.id)"
                                ExploitTitle  = $exploitData.description[1] # The title is the second element of the description array
                                Platform      = $exploitData.platform_id
                                PublishedDate = $exploitData.date_published
                                Verified      = [bool]$exploitData.verified
                            }
                        }
                    }
                }
                else
                {
                    Write-Warning "No exploits found on Exploit-DB for CVE $singleCveId."
                }
            }
            catch
            {
                Write-Error "Failed to retrieve data for CVE $singleCveId from the Exploit-DB AJAX endpoint: $_"
            }
        }
    }
}

